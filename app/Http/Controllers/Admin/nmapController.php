<?php
/**
 * Author: Damian Schwyrz <mail@damianschwyrz.de>
 * URL: https://www.damianschwyrz.de
 * Copyright (c) 2018.
 */

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Jobs\putCommandInTaskSpooler;
use App\Project;
use App\Target;
use App\Task\nmapCommand;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;

class nmapController extends Controller
{
    /**
     * IMPORTANT: Since laravel queue:worker is not really solid when working with long running python commands like
     * dirbuster, dirsearch, massdns... I'm forced to use tsp on ubuntu! Super solid way, easy to monitor and no
     * overlaping of processes!
     *
     * @param \Illuminate\Http\Request $request
     * @param \App\Target              $target
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function startScan(Request $request, Target $target): JsonResponse
    {

        $this->validate($request, [
            'type'  => 'required|string|in:quick,portselection',
            'ports' => ['required', 'string', 'regex:/^[\d|\-|,]*$/'],
        ]);

        $type = $request->input("type");
        $ports = $request->input("ports");

        $command = nmapCommand::create($target, $type, $ports);
        putCommandInTaskSpooler::dispatch($command);

        return response()->json([
            'status'  => true,
            'command' => $command,
        ]);

    }

    /**
     * @param \Illuminate\Http\Request $request
     * @param \App\Project             $project
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function scanWithoutReport(Request $request, Project $project): JsonResponse
    {

        $this->validate($request, [
            'limit' => 'required|int|min:1',
            'type'  => 'required|string|in:quick,portselection',
            'ports' => ['required', 'string', 'regex:/^[\d|\-|,]*$/'],
        ]);

        $limit = $request->input('limit');
        $type = $request->input("type");
        $ports = $request->input("ports");

        $targets = $project->activeTargets()->whereNull("open_ports")->take($limit)->get();

        foreach ($targets as $target) {

            $command = nmapCommand::create($target, $type, $ports);
            putCommandInTaskSpooler::dispatch($command);
        }

        return response()->json([
            'status' => true,
        ]);
    }

}
