<?php
/**
 * Author: Damian Schwyrz <mail@damianschwyrz.de>
 * URL: https://www.damianschwyrz.de
 * Copyright (c) 2018.
 */

namespace App\Task;

use App\Helper\FileHelper;
use Symfony\Component\Process\Process;


/**
 * Class GetDnsRecord
 * @package App\Task
 */
class GetDnsRecord
{

    const NS = [
        '1.1.1.1',
        '8.8.8.8',
        '8.8.4.4',
    ];
    /**
     * @var array
     */
    private $cname = "";

    /**
     * @var array
     */
    private $ips = [];

    /**
     * GetDnsRecord constructor.
     *
     * @param $host
     */
    public function __construct($host)
    {


        $usedNS = array_random(self::NS);

        $exec = new Process(config("toolset.bin.host") . " " . $host . " " . $usedNS);
        $exec->run();
        $output = $exec->getOutput();

        preg_match_all("|(.*) has address (.*)|", $output, $hostData);

        if (count($hostData) != 3 || empty($hostData[2])) {
            return;
        }

        $this->ips = $hostData[2];


        $exec = new Process(config("toolset.bin.dig") . " @" . $usedNS . " +short " . $host);
        $exec->run();
        $output = $exec->getOutput();
        $digData = FileHelper::splitContentByLines($output);

        if (isset ($digData[0]) && trim($digData[0]) != "") {
            if (preg_match("/[a-z]/i", $digData[0])) {
                $this->cname = $digData[0];
            }
        }

    }

    /**
     * @return array|null
     */
    public function ips(): ?array
    {

        if (isset($this->ips)) {
            return $this->ips;
        }

        return null;
    }

    /**
     * @return null|string
     */
    public function cname():?string
    {
        if (isset($this->cname) && $this->cname != "") {
            return $this->cname;
        }

        return null;
    }

}