/*
 * Author: Damian Schwyrz <mail@damianschwyrz.de>
 * URL: https://www.damianschwyrz.de
 * Copyright (c) 2018.
 */


$(function () {


    $('#prepare-mass-dirsearch-modal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget);
        var route = button.data("href");

        $("#start-mass-dirsearch").data("route", route);
        $("#start-mass-dirsearch").attr("data-route", route);


    });

    $('#prepare-mass-dirsearch-modal').on('hide.bs.modal', function () {

        $("#start-mass-dirsearch").find(".fa").addClass("hidden");

    });

    $(document).on('click', "#start-mass-dirsearch", function (event) {
        event.preventDefault();
        var btn = $(this);

        var route = btn.data("route");

        var amount = $("#mass-dirsearch-amount").val();
        var statuses = $("#mass-dirsearch-statuses").val();
        var word = $("#mass-dirsearch-word").val();

        var threads = parseInt($("#mass-dirsearch-threads").val());
        var wordlist = $("#mass-dirsearch-wordlist").val();
        var extensions = $("#mass-dirsearch-extensions").val();
        var ignorestatus = $("#mass-dirsearch-ignore-status").val();
        var recursive = parseInt($("#mass-dirsearch-recursive").val());
        var timeout = parseInt($("#mass-dirsearch-timeout").val());

        if (threads <= 0 || isNaN(threads)) {
            massdirsearchError("Threadscount has to be bigger than 0!");
            return false;
        }

        if (amount <= 0 || isNaN(amount)) {
            massdirsearchError("amount has to be bigger than 0!");
            return false;
        }

        if (route == "") {
            massdirsearchError("Route not found!");
            return false;
        }

        if (wordlist == "") {
            massdirsearchError("Wordlist has to be set!");
            return false;
        }

        if (extensions == "") {
            massdirsearchError("Extensions has to be set!");
            return false;
        }

        if (ignorestatus == "") {
            massdirsearchError("Ignore statuses have to be set!");
            return false;
        }

        if (timeout == "") {
            massdirsearchError("timeout has to be set!");
            return false;
        }

        if (isNaN(recursive) || recursive < 0 || recursive > 1) {
            massdirsearchError("Recursive has to be 0 or 1");
            return false;
        }

        btn.find(".fa").removeClass("hidden");

        $.ajax({
            url: route,
            type: 'POST',
            data: {
                amount: amount,
                word: word,
                statuses: statuses,
                threads: threads,
                wordlist: wordlist,
                extensions: extensions,
                ignore_status: ignorestatus,
                recursive: recursive,
                timeout: timeout
            },
            success: function (result) {
                console.log(result);
                $('#prepare-mass-dirsearch-modal').modal('hide');
                loadInfoBox("#infobox", "Dirscan for " + result.added + " domains is in queue - come back later ;)");
            },
            error: function (result) {
                console.log(result.responseJSON);
                massdirsearchError(result.responseJSON.message);
                btn.find(".fa").addClass("hidden");
            }
        });

    });

});


function massdirsearchError(message) {

    $("#mass-dirsearch-error .alert span").html(message);
    $("#mass-dirsearch-error").fadeIn();

    setTimeout(function () {
        $("#mass-dirsearch-error").fadeOut("fast");
        $("#mass-dirsearch-error .alert span").html("");

    }, 3200);
}