<?php
/**
 * Author: Damian Schwyrz <mail@damianschwyrz.de>
 * URL: https://www.damianschwyrz.de
 * Copyright (c) 2018.
 */

/*
  |--------------------------------------------------------------------------
  | Web Routes
  |--------------------------------------------------------------------------
  |
  | Here is where you can register web routes for your application. These
  | routes are loaded by the RouteServiceProvider within a group which
  | contains the "web" middleware group. Now create something great!
  |
 */

Route::get('/', function () {
    return redirect()->route('login');
});

// Authentication Routes...
Route::get('admin/login', ['as' => 'login', 'uses' => 'Auth\LoginController@showLoginForm']);
Route::post('admin/login', ['middleware' => ['csrf'], 'as' => 'login.action', 'uses' => 'Auth\LoginController@login']);
Route::post('admin/logout', ['middleware' => ['csrf'], 'as' => 'logout', 'uses' => 'Auth\LoginController@logout']);

// Registration Routes...
Route::get('admin/register', [
    'as'   => 'register.form',
    'uses' => 'Auth\RegisterController@showRegistrationForm',
]);

Route::post('admin/register', [
    'middleware' => ['csrf'],
    'as'         => 'register.action',
    'uses'       => 'Auth\RegisterController@register',
]);

// Password Reset Routes...
Route::get('admin/password/reset', [
    'as'   => 'password.reset.form',
    'uses' => 'Auth\ForgotPasswordController@showLinkRequestForm',
]);

Route::post('admin/password/email', [
    'middleware' => ['csrf'],
    'as'         => 'password.reset.action',
    'uses'       => 'Auth\ForgotPasswordController@sendResetLinkEmail',
]);

Route::get('admin/password/reset/{token}', [
    'as'   => 'password.reset_with_token.form',
    'uses' => 'Auth\ResetPasswordController@showResetForm',
]);

Route::post('admin/password/reset', [
    'middleware' => ['csrf'],
    'as'         => 'reset.action',
    'uses'       => 'Auth\ResetPasswordController@reset',
]);


Route::group(['middleware' => ['auth', 'csrf'], 'prefix' => 'admin'], function () {

    /**
     * Dashboard
     */
    Route::get('dashboard', [
        'as'   => 'admin.dashboard',
        'uses' => 'Admin\DashboardController@index',
    ]);

    /**
     * Adminnotices
     */

    Route::delete("admin-notice/{notice}", [
        'as'   => 'admin.admin-notice.destroy',
        'uses' => 'Admin\AdminNoticeController@destroy',
    ]);

    Route::get("admin-notice/clear", [
        'as'   => 'admin.admin-notice.clear',
        'uses' => 'Admin\AdminNoticeController@clear',
    ]);

    /**
     * Task Spooler (sudo apt-get install tsp !!!!)
     */

    Route::get('tsp', [
        'as'   => 'admin.tsp.index',
        'uses' => 'Admin\TaskSpoolerController@index',
    ]);

    Route::get('tsp/get', [
        'as'   => 'admin.tsp.get',
        'uses' => 'Admin\TaskSpoolerController@getTSP',
    ]);

    Route::post('tsp/clear', [
        'as'   => 'admin.tsp.clear',
        'uses' => 'Admin\TaskSpoolerController@clearTSP',
    ]);

    Route::post('tsp/get/output/temp', [
        'as'   => 'admin.tsp.get.output.temp',
        'uses' => 'Admin\TaskSpoolerController@getTSPTempfile',
    ]);

    Route::delete('tsp/clear/{id}', [
        'as'   => 'admin.tsp.deque',
        'uses' => 'Admin\TaskSpoolerController@deleteFromTSPQueue',
    ]);

    /**
     * ps aux
     */
    Route::get('psaux', [
        'as'   => 'admin.psaux.index',
        'uses' => 'Admin\psauxController@index',
    ]);

    Route::get('psaux/get', [
        'as'   => 'admin.psaux.get',
        'uses' => 'Admin\psauxController@getPsaux',
    ]);

    Route::post('psaux/kill', [
        'as'   => 'admin.psaux.kill',
        'uses' => 'Admin\psauxController@killProcess',
    ]);

    /**
     * Sublist3r
     */
    Route::post('sublister/scan/{project}', [
        'as'   => 'admin.sublister.scan',
        'uses' => 'Admin\SublisterController@scanDomain',
    ]);

    /**
     * massdns
     */
    Route::post('massdns/scan/{project}', [
        'as'   => 'admin.massdns.scan',
        'uses' => 'Admin\massdnsController@scanDomain',
    ]);

    /**
     * artisan brute forcer
     */
    Route::post('bruteforce/subdomains/simple/start/{project}', [
        'as'   => 'admin.bruteforce.subdomains.simple',
        'uses' => 'Admin\bruteForceController@startRandomizedSubdomainBruteForcing',
    ]);

    /**
     * Python htaccess brute force
     */
    Route::post('htbrute/scan', [
        'as'   => 'admin.htbrute.scan',
        'uses' => 'Admin\bruteForceController@startHtaccessBruteforcing',
    ]);

    /**
     * ctfr
     */
    Route::post('ctfr/scan/{project}', [
        'as'   => 'admin.ctfr.scan',
        'uses' => 'Admin\ctfrController@scanDomain',
    ]);

    /**
     * facebook CT
     */
    Route::post('facebook-ct/scan/{project}', [
        'as'   => 'admin.facebook-ct.scan',
        'uses' => 'Admin\facebookCTController@scanDomain',
    ]);

    /**
     * wpscan
     */
    Route::post('wpscan/scan/{target}', [
        'as'   => 'admin.wpscan.scan',
        'uses' => 'Admin\wpscanController@scanDomain',
    ]);


    /**
     * Http Status getter
     */
    Route::post('httpstatus/get/{target}', [
        'as'   => 'admin.http-status.get',
        'uses' => 'Admin\httpGetController@getHttpData',
    ]);

    Route::post('httpstatus/get/{project}/recheck-on-zero', [
        'as'   => 'admin.http-status.recheck-on-0',
        'uses' => 'Admin\httpGetController@startHttpRecheckOnStatus0',
    ]);

    /**
     * Dirsearch
     */
    Route::post('dirsearch/scan/{target}', [
        'as'   => 'admin.dirsearch.scan',
        'uses' => 'Admin\DirsearchController@startScan',
    ]);

    Route::post('dirsearch/command/{target}', [
        'as'   => 'admin.dirsearch.command',
        'uses' => 'Admin\DirsearchController@getCommand',
    ]);

    Route::post('dirsearch/massscan/{project}', [
        'as'   => 'admin.dirsearch.massscan',
        'uses' => 'Admin\DirsearchController@startMassScan',
    ]);


    /**
     * ScreenshotTaker
     */
    Route::post('screenshottaker/make/{target}', [
        'as'   => 'admin.screenshottaker.make',
        'uses' => 'Admin\ScreenshottakeController@make',
    ]);

    Route::post('screenshottaker/command/{target}', [
        'as'   => 'admin.screenshottaker.command',
        'uses' => 'Admin\ScreenshottakeController@getCommand',
    ]);

    /**
     * nmap
     */
    Route::post('nmap/scan/{target}', [
        'as'   => 'admin.nmap.scan',
        'uses' => 'Admin\nmapController@startScan',
    ]);

    Route::post('nmap/scan/{project}/without-report', [
        'as'   => 'admin.nmap.scan.without-report',
        'uses' => 'Admin\nmapController@scanWithoutReport',
    ]);

    /**
     * Targets
     */
    Route::get('target/create/{project}', [
        'as'   => 'admin.target.create',
        'uses' => 'Admin\TargetController@create',
    ]);

    Route::get('target/import/{project}', [
        'as'   => 'admin.target.import',
        'uses' => 'Admin\TargetController@import',
    ]);

    Route::post('target/import/{project}', [
        'as'   => 'admin.target.import.store',
        'uses' => 'Admin\TargetController@startImport',
    ]);

    Route::post('target/{project}', [
        'as'   => 'admin.target.store',
        'uses' => 'Admin\TargetController@store',
    ]);

    Route::patch('target/{target}', [
        'as'   => 'admin.target.update',
        'uses' => 'Admin\TargetController@update',
    ]);

    Route::get('target/{target}/edit', [
        'as'   => 'admin.target.edit',
        'uses' => 'Admin\TargetController@edit',
    ]);

    Route::delete('target/{target}', [
        'as'   => 'admin.target.destroy',
        'uses' => 'Admin\TargetController@destroy',
    ]);

    Route::patch('target/{target}/archive', [
        'as'   => 'admin.target.archive',
        'uses' => 'Admin\TargetController@archive',
    ]);

    Route::patch('target/{target}/status', [
        'as'   => 'admin.target.change.status',
        'uses' => 'Admin\TargetController@changeStatus',
    ]);

    Route::post('target/{target}/get/field', [
        'as'   => 'admin.target.get.field',
        'uses' => 'Admin\TargetController@getField',
    ]);

    /**
     * Projects
     */
    Route::resource('project', 'Admin\ProjectController', ['as' => 'admin']);

    Route::get('project/archived/projects', [
        'as'   => 'admin.project.archived-projects',
        'uses' => 'Admin\ProjectController@archivedProjects',
    ]);

    Route::get('project/{project}/archived/targets', [
        'as'   => 'admin.project.archived-targets',
        'uses' => 'Admin\ProjectController@archivedTargets',
    ]);

    Route::patch('project/{project}/archive', [
        'as'   => 'admin.project.archive',
        'uses' => 'Admin\ProjectController@archive',
    ]);


    /**
     * Quicklinks "archive" targets within project... maybe not ideal controller?
     */
    Route::post('project/{project}/archive/with-http-0/targets', [
        'as'   => 'admin.project.archive.with-http-0',
        'uses' => 'Admin\ProjectController@archiveWithHttp0',
    ]);

    Route::post('project/{project}/archive/unresolvable/targets', [
        'as'   => 'admin.project.archive.unresolvable',
        'uses' => 'Admin\ProjectController@archiveUnresolvable',
    ]);

    Route::post('project/{project}/archive/timed-out/targets', [
        'as'   => 'admin.project.archive.timed-out',
        'uses' => 'Admin\ProjectController@archiveTimedOut',
    ]);

    Route::post('project/{project}/archive/without-ip/targets', [
        'as'   => 'admin.project.archive.without-ip',
        'uses' => 'Admin\ProjectController@archiveWithoutIp',
    ]);

    Route::post('project/{project}/archive/by-search/targets', [
        'as'   => 'admin.project.archive.by-search',
        'uses' => 'Admin\ProjectController@archiveBySearch',
    ]);

    /**
     * User
     */
    Route::resource('user', 'Admin\UserController', ['as' => 'admin']);


    /**
     * Jobs
     */

    Route::get('failed-job', [
        'as'   => 'admin.failed-job.index',
        'uses' => 'Admin\FailedJobController@index',
    ]);

    Route::delete('failed-job/{job}', [
        'as'   => 'admin.failed-job.destroy',
        'uses' => 'Admin\FailedJobController@destroy',
    ]);

    Route::get('failed-job/clear', [
        'as'   => 'admin.failed-job.clear',
        'uses' => 'Admin\FailedJobController@clear',
    ]);

    Route::get('job', [
        'as'   => 'admin.job.index',
        'uses' => 'Admin\JobController@index',
    ]);

    Route::delete('job/{job}', [
        'as'   => 'admin.job.destroy',
        'uses' => 'Admin\JobController@destroy',
    ]);

    Route::get('job/clear', [
        'as'   => 'admin.job.clear',
        'uses' => 'Admin\JobController@clear',
    ]);
});

